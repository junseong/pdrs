1.	개요
    GPS를 사용할 수 없는 실내에서의 각속도, 가속도, 자기, 기압 센서를 이용한 이용자의 동작 특정 및 그를 통한 위치 파악,
	그리고 장소 특정이 목표(계단이나 엘리베이터 등의 위치를 파악)입니다. 이를 위하여 여러 센서들을 이용하여 데이터를 수집하고,
	수집한 데이터를 분석하여 사용자의 동작을 파악하고, 그에 따른 위치를 결정합니다.  
	//동기를 적어야 함 -> 화재현장의 구조나, 쇼핑센터에서의 광고에 사용, 혹은 전장에서
	

2.	하드웨어 //각 센서들의 스케일을 정할 때 기준을 왜 그렇게 정했는지 이유를 정확히 적어야 함!
    a.	가속도 및 각속도 센서
        가속도의 경우 달리기를 해도 인간의 가속도가 1.2 G를 넘기 힘듭니다.
        따라서 제시된 2g의 측정범위를 가진 센서를 사용하면 정확도를 가장 높게 가져갈 수 있습니다.
        LSM303D센서를 사용하면 위의 측정범위를 측정할 수 있으며, 아래의 지자기 센서가 요구하는 조건을 만족하는 지자기 센서도 포함하고 있습니다.
        최대한 빨리 돌아보았을 때 최대 각속도(dps)가 약 250정도로 측정 되었습니다.
        따라서 평상시의 동작 감지를 위해선 감지범위를 250으로 하는 것이 좋을 것 같습니다. 
        각속도 센서는 L3GD20 센서를 사용합니다. 위의 감지범위를 만족하면서 I2C와 SPI모두 지원합니다.
    b.	자기 센서
        평상시 지구 자기장의 세기는 0.25 ~ 0.65 Gauss 입니다. 따라서 정확도를 위해서 측정범위가 작은 센서를 사용해야 합니다.
        위의 LSM303D센서에 포함된 자기 센서가 2gauss의 측정범위를 지원하므로 사용하면 될 것 같습니다. 
    c.	기압센서
        해수면에서의 대기압은 약 1013hPa 이며 높이 올라갈수록 줄어들게 됩니다.
        우리나라에서 가장 높은 빌딩인 롯데월드 타워에서 약 950까지 줄어들게 되기 때문에,
        900 ~ 1100 사이의 값을 측정할 수 있는 센서를 사용 할 수 있습니다. 
        기압센서는 조사한 센서 모두 사용가능하기 때문에 소모 전력이 작으면서 오차도 작은 bmp180 센서를 사용 하려고 합니다
    d.	위의 센서를 모두 포함하고 있는 모듈 GY-89을 사용하려고 합니다.
    e.	기타 하드웨어
        i.	보드 : 센서데이터를 얻기 위한 보드로 아두이노 우노를 사용하며, 데이터 수신은 라즈베리파이에서 합니다.
                우노는 많은 사용자가 있어 참고할 자료가 많으며, 위의 센서들과 쉽게 호환 됩니다. 따라서 센서데이터를 수집 할 때 사용합니다.
                하지만 데이터를 처리할 때는 더 좋은 성능이 필요하기 때문에 라즈베리 파이를 사용하려 합니다.  
        ii.	파워 : 이동하며 데이터를 측정해야 하기 때문에 어댑터를 이용하여 전원공급이 어렵습니다.
                또한, 블루투스를 통한 통신을 사용한다면 라즈베리파이도 같이 휴대해야 하기 때문에 대용량 전지가 필요 할 것입니다.
                여러 개의 건전지를 묶어 사용하거나, 스마트폰용 보조배터리를 사용할 수 있을 것입니다.
                전자의 경우 모델에 따라 다르지만 2000 ~ 3000mAh의 용량이고, 후자의 경우 20000mAh 이므로 후자를 사용하는 것이 좋을 것 같습니다. 
        iii.기타 : 아두이노에서 얻은 데이터를 처리할 때 다른 기기에서 하게 되는데, 이 과정에서 블루투스를 사용하면 라즈베리파이와 직접 통신이 가능합니다.
                만약 sd카드를 사용할 것이라면, 라즈베리파이에 리더기를 장착하거나, 이미 장착된 다른 pc를 사용하면 될 것 입니다.
                블루투스를 사용 할 것이라면 라즈베리파이는 2.0이상의 모든 프로토콜을 지원하므로 모듈 선택이 자유롭습니다. 

3.	전송
    a.	블루투스를 통한 전송
        HC05 모듈을 사용한 블루투스 2.0프로토콜로 전송을 합니다. AVR은 데이터 수집 및 전송만을 담당하게 됩니다. 모듈은 UART방식으로 동작합니다. 
    b.	SD카드를 장착하여 저장 후 필요 할 때 데이터 전송
        SPI를 통하여 동작하는 SD카드를 달아서 AVR에서 데이터 수집 및 저장을 하고 후에 카드를 PC등으로 옮겨서 처리하는 방법도 있습니다.

4.	데이터 처리
    a.	수신
        - 블루투스의 경우 라즈베리파이에서 미리 페어링 된 블루투스 모듈의 인풋 버퍼의 위치를 찾아서 주기적으로 가져옵니다. 
		- sd 카드를 사용할 경우 리더기를 이용하여 PC를 통해 데이터를 받습니다.
    b.	처리
        i.	동작 파악
            -	Turn
                각속도 센서를 이용하여 Turn 동작을 특정합니다.
                1.	N개의 샘플을 통한 calibration
                    각 축의 값을 N개의 샘플을 잡아서 평균을 냅니다.이렇게 얻은 각 축의 값의 평균을 이용하여 calibration 된 에너지를 구합니다.
                    이를 통하여 센서 자체의 오차를 구할 수 있습니다.
                    Gyro(calib)=sqrt(avg(x)**2+avg(y)**2+avg(z)**2)
                2.	이동평균필터
                    w개의 샘플을 사용하는 이동평균필터를 사용합니다. 이 과정을 통해서 노이즈를 줄일 수 있습니다.
                    Calibration 된 에너지를 뺀 값을 이동평균 필터를 통해서 에너지를 구합니다.
                    G=avg((Gyro-Gyro(calib))**2)
                    Gyro(calib)을 제거하면서 오차를 보상하고, 그 값을 가까운 샘플들의 평균을 구하면서 얻은 이동평균 필터를 사용하여 에너지가 증가하는 추세가 언제 시작되는지 파악 할 수 있습니다.
                3.	문턱 값
                    위의 이동평균필터를 통해 얻은 값이 문턱 값이 넘을 때 High를 내고, 낮을 때 Low를 출력합니다. 이 문턱 값은 여러 번의 실험을 통해서 얻을 수 있으며 논문에서는 10개의 샘플을 사용하고, 15ms 마다 측정할 때 1.2rad이었습니다.
                4.	Turn 확정
                    위의 문턱 값 함수가 positive edge 일 때와 negative edge 일 때를 파악합니다. 그 사이가 Turn 동작중임을 나타냅니다. 
                5.	Turn 방향
                    방향은 각속도 센서로 입력되는 값의 절대값을 이동평균필터에 넣어서 파악합니다.
                    -	고도 변화 파악
                        고도변화 파악에는 기압계를 사용합니다. 실시간으로 입력되는 기압계의 값을 로우 패스 필터를 이용하여 처리합니다. 
                        LPF=B*P(i-1)+(1-B)*P(i)
                        진동하는 오차를 잡아주는 역할을 하며, B의 값은 추후 설정해야 합니다. 논문에서는 0.9를 사용하였습니다.
                        매 시도마다, N개의 샘플의 평균을 낸 값을 사용하는데, 직전 값과 비교를 통해 일정 값을 넘으면 고도 변화로 인식합니다.
                    -	엘리베이터
                        엘리베이터 안에 있다는 것을 인식하는 방법엔 3가지가 있습니다. 첫번째는 자력계로, 자력변화를 이용하고,
                        두번째는 기압계를 이용한 고도 변화, 세번째는 가속도계를 이용한 운동에너지 변화 측정 입니다.
                    -	정지상태
                        가속도계나, 각속도, 기압, 자력계 등에서 큰 변화가 없을 때 정지상태로 판단합니다.
                    -	걷기 & 계단
                        이 두가지는 가속도계를 사용한다는 공통점이 있습니다. 
                        하지만 계단을 오르내릴 때 운동에너지가 더 크고, 기압의 변화 또 한 확인하여 참고 할 수 있습니다. 
                    -	걸음 수 측정 및 거리 예측 알고리즘
                        걸음에는 두가지 상태가 있습니다. 에너지 측정은 위의 각속도 계를 사용한 방법과 유사한 방법으로 가속도계를 사용합니다.
                        첫번째로 calibration을 통하여 기본적인 오차를 파악하고, 이동평균필터를 통해서 증가하는 추세를 파악합니다.
                        다른 점은 문턱 값 설정인데, 이유는 걸음에는 두 단계가 있습니다. 
                        Swing 단계와, stance 단계이며 이 두가지를 구분하기 위하여 두개의 문턱 값을 설정합니다.
                        위에서 정한 두 단계가 번갈아 나오는 것을 통하여 걸음 수를 확정하게 됩니다.
                        걸음 수를 확정한 후 거기에 걸음당 이동거리를(상수) 곱하여 총 이동거리를 예측합니다. 

5.	시뮬레이션
    a.	기본적인 시뮬레이션
        논문에서 주로 다루고 있는 것은 동작을 특정하는 것 이므로, 동작의 구성을 다양하게 여러 번 수행 해야 합니다. 
			1. 회전 : 좌, 우 방향 다양한 조합으로 실험
			2. 높이 변화 : 위, 아래 방향으로 다양한 순서로 실험
			3. 동작인식 : 정지, 엘리베이터, 걷기, 계단 동작 수행을 인식하는지 확인
			4. 걸음 수 :걸음 수를 바꿔가면서 실제 걸음과 얼마나 차이 나는지 실험
			5. 계단 걸음 수: 걸음 수를 바꿔가며 확인
			6. 종합 : 여러가지 동작을 종합하여서 다양한 조합과 거리로 확인

			-> 207관에서 실험(층간 이동, 회전, 걷는 거리 등등)
    b.	추가 해볼 만한 시뮬레이션
        다른 논문의 경우 특정 트랙을 정하여 이동을 한 뒤에, 여러가지 알고리즘을 적용해보고 그에 따른 근사 된 트랙을 만들어 비교하는 경우가 있었습니다. 
        또한, 걷는 속도를 다르게 하는 경우도 있었는데, 이 논문에서 운동에너지를 측정하여 동작을 특정하므로 고려 해 볼만 하다고 생각됩니다. 
	c. 시작점과 끝나는 점을 같게(다시 돌아오는 것으로)하여서 오차를 파악!


6.	관련 논문
    a.	Monteserin, Juan Jose Marron. "Multi sensor system for pedestrian tracking and activity recognition in indoor environments." University of South Florida, 2014.
		동기
			1. Safety : 비상상황에서 건물안 사용자의 위치를 알 수 있음
			2. Resource-efficiency : 스마트 빌딩, 스마트 홈에서 공조시스템, 조명등 설정 가능
			3. Security : 위치를 이용하여 주인이 있을 때만 lock 이 작동하는 등 사용 가능
			4. Social networking : 실내에서 동료를 찾을 때 사용 가능
			5. Automatic resource routing : 시각적 제한이 있을 때 목적지에 당도 할 수 있도록 사용
			6. Leisure : 박물관이나 미술관에서의 자동화
			7. Navigation : 방문자들이 목적하는 방이나 공간으로 갈 수 있게 안내
			8. Advertisement : 쇼핑몰 등지에서 위치에 따른 광고
		특징
			안드로이드 스마트폰의 센서를 이용하여 데이터 수집. Turn, Stationary times, Elevator, Walking, Stair 동작을 파악.
		기여
			1. 추측항법과 동시에 환경을 파악하는데, 추가적인 infrastructure 가 필요하지 않고 미리 calibration 할 필요가 없음
			2. 추가적인 하드웨어 없이 스마트폰을 사용
			3. 학습과정과 통계적인 분석이 필요한 머신러닝을 사용하지 않고 필터와, 최고점 파악, 문턱값설정, calibration 등을 사용하여서
			   raw data에서 필요한 정보를 뽑아낸다. 
			4. Point of interest 를 찾아서 추측항법을 좀 더 실용적이고, 정확하게 만들어줌
			5. 걸음거리를 측정할 때 오차를 줄이기 위하여 걸음 수에 걸음 거리를 더하여 측정함. 더 나아가 POI를 이용하여 오차를 리셋
			6. 안드로이드 스마트폰이 클라이언트로써 서버에 데이터를 보내고 서버에서 데이터를 평가함
    b.	Beauregard, Stephane, and Harald Haas. "Pedestrian dead reckoning: A basis for personal positioning." Proceedings of the 3rd Workshop on Positioning, Navigation and Communication. 2006.
        동기
			1. 노약자 및 어린이, 재소자, 시각장애인들을 위한 서비스
			2. 경찰, 소방관등 긴급대응시스템
			3. 상업적 이용
			4. 사용자의 위치를 파악하여 전파 자원의 효율적인 사용(핸드오버, 안테나의 조향 라우팅등등)
		특징
			1. 가속도계를 통하여 걸음 수를 측정하는 것은 위의 논문 과 같지만, LPF 를 통하여 처리 -> 이동평균 필터와 다른 점 찾기!
			2. 한 걸음당 가속도 크기의 최대, 최소, 분산을 구하고, 걸음 구간 당 가속도의 합을 적분한다.
			3. 위의 값들을 신경망을 사용하여 훈련한다.
			4. 위 과정을 통하여 걸음 거리를 예측 할 수 있다.
			5. compass 는 고정되어 있음(이 실험에서는 머리에) 따라서 그 방향을 토대로 사용자의 방향을 알 수 있음
		결론
			1. 신경망을 사용한 step length estimation 의 결과가 좋았음
			2. 자세하게 걸음 거리를 모델링 하면 더 나은 결과를 얻어 낼 수 있을 것 임
			3. 머리에 했을 때 결과가 좋았고, 상체나 허리에 부착하는 경우도 잘 될 것임
			4. 하지만 가장 보편적인 방법인 핸드백이나, 주머니에 넣고 다니는 방법은 잘 안 될 것임
			5. 그렇지만 RF 기술이나, 기지국을 이용한 측정과 병행한다면 좋을 것임
    c.	Sun, Zuolei, et al. "Activity classification and dead reckoning for pedestrian navigation with wearable sensors." Measurement science and technology 20.1 (2008): 015203.
		
    d.	Pratama, Azkario Rizky, and Risanuri Hidayat. "Smartphone-based pedestrian dead reckoning as an indoor positioning system." System Engineering and Technology (ICSET), 2012 International Conference on. IEEE, 2012.
        스마트폰을 이용하여 가속도 데이터를 얻고, 그 데이터를 통하여 걸음 수를 측정합니다. 그리고 걸음 당 거리를 구하기 위하여 3가지 방법을 도입하여 그 차이를 비교합니다. Calibration 과정 없이, 최고점을 찾는 형식으로 걸음을 측정하였습니다.
    e.	Ojeda, Lauro, and Johann Borenstein. "Personal dead-reckoning system for GPS-denied environments." Safety, Security and Rescue Robotics, 2007. SSRR 2007. IEEE International Workshop on. IEEE, 2007.
        시각화를 통하여 계단 위치를 파악하는 예제가 수록되어 있습니다. 
    f.	Jimenez, Antonio R., et al. "A comparison of pedestrian dead-reckoning algorithms using a low-cost MEMS IMU." Intelligent Signal Processing, 2009. WISP 2009. IEEE International Symposium on. IEEE, 2009.
        신발에 부착한 가속도계로 걸음 수를 측정합니다. 그리고 걸음 당 거리를 추측하는 두 알고리즘을 도입하여서 예상 거리를 추측합니다. 
    h. Abdulrahim, Khairi, et al. "Understanding the performance of zero velocity updates in MEMS-based pedestrian navigation." International Journal of Advancements in Technology 5.2 (2014): 53-60.
        ZUPT에 관한 설명입니다.
	i. Alzantot, Moustafa, and Moustafa Youssef. "UPTIME: Ubiquitous pedestrian tracking using mobile phones." Wireless Communications and Networking Conference (WCNC), 2012 IEEE. IEEE, 2012.
	j. Harle, Robert. "A survey of indoor inertial positioning systems for pedestrians." IEEE Communications Surveys and Tutorials 15.3 (2013): 1281-1293.
		여러 논문들이 각각 어떻게 구성되어있는지 비교하는 논문